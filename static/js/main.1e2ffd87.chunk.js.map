{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","handleDataModal","setOpenModal","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","qwery","setQwery","setSelectedFilter","selectedFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","clearTodo","useState","user","setUser","isError","setIsError","userGet","a","userId","arrUser","useEffect","color","href","email","name","App","setTodos","setSelectedTodo","checkLoad","setCheckLoad","openModal","visibleTodos","newTodos","qweryNormal","toLowerCase","trim","filter","includes","filterTodos","getTodo","arrTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e2ffd87.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  handleDataModal: (todo: Todo) => void\n  setOpenModal: (openModal: boolean) => void\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos, handleDataModal, setOpenModal, selectedTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {todo.id === selectedTodo?.id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      handleDataModal(todo);\n\n                      setOpenModal(true);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","type Props = {\n  qwery: string\n  setQwery: (qwery: string) => void\n  selectedFilter: string\n  setSelectedFilter: (selectedFilter: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    qwery, setQwery, setSelectedFilter, selectedFilter,\n  },\n) => {\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQwery(event.target.value);\n  };\n\n  const handleSelectedChange = (event: { target: { value: string } }) => {\n    setSelectedFilter(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={handleSelectedChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={qwery}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          qwery && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQwery('')}\n              />\n            </span>\n          )\n\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setOpenModal: (openModal: boolean) => void\n  selectedTodo: Todo | null\n  clearTodo: () => void\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    setOpenModal, selectedTodo, clearTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  const userGet = async () => {\n    try {\n      const arrUser = await getUser(selectedTodo?.userId || 0);\n\n      setUser(arrUser);\n    } catch {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    userGet();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setOpenModal(false);\n                clearTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            {isError && (\n              <h2 style={{ color: 'red' }}>\n                An error occured while user loading\n              </h2>\n            )}\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [qwery, setQwery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [checkLoad, setCheckLoad] = useState(true);\n  const [openModal, setOpenModal] = useState(false);\n\n  const filterTodos = () => {\n    let newTodos = [...todos];\n\n    const qweryNormal = qwery.toLowerCase().trim();\n\n    if (qweryNormal) {\n      newTodos = newTodos.filter(todo => todo.title.toLowerCase().includes(qweryNormal));\n    }\n\n    switch (selectedFilter) {\n      case 'active':\n        return newTodos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return newTodos.filter(todo => todo.completed);\n\n      default: return newTodos;\n    }\n  };\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleDataModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const visibleTodos = filterTodos();\n\n  const getTodo = async () => {\n    try {\n      const arrTodo = await getTodos();\n\n      setCheckLoad(false);\n\n      setTodos(arrTodo);\n    } catch {\n      setCheckLoad(true);\n    }\n  };\n\n  useEffect(() => {\n    getTodo();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQwery={setQwery}\n                qwery={qwery}\n                selectedFilter={selectedFilter}\n                setSelectedFilter={setSelectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                checkLoad\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      selectedTodo={selectedTodo}\n                      todos={visibleTodos}\n                      setOpenModal={setOpenModal}\n                      handleDataModal={handleDataModal}\n                    />\n                  )\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        openModal && (\n          <TodoModal\n            clearTodo={clearSelectedTodo}\n            selectedTodo={selectedTodo}\n            setOpenModal={setOpenModal}\n          />\n        )\n\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}